steps:
- name: gcr.io/cloud-builders/gcloud
  entrypoint: 'bash'
  args:
    - "-c"
    - |
      echo "$(gcloud beta secrets versions access --secret=application-default-credentials-cloudbuild latest)" > decrypted-credentials.json

- name: 'ubuntu'
  entrypoint: 'bash'
  args:
    - "-c"
    - |
      echo "$(cat decrypted-credentials.json)"

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker pull gcr.io/$PROJECT_ID/bts-ml-etl:latest || exit 0']

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker pull gcr.io/$PROJECT_ID/bts-ml-model:latest || exit 0']

- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build', 
    '-f', 'Dockerfile.etl', 
    '-t', 'gcr.io/$PROJECT_ID/bts-ml-etl:latest', 
    '--cache-from', 'gcr.io/$PROJECT_ID/bts-ml-etl:latest',
    '.'
  ]
  dir: 'src'

- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build', 
    '-f', 'Dockerfile.model_training', 
    '-t', 'gcr.io/$PROJECT_ID/bts-ml-model:latest', 
    '--cache-from', 'gcr.io/$PROJECT_ID/bts-ml-model:latest',
    '.'
  ]
  dir: 'src'

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: [
    '-c', 
    'docker run -t --env GOOGLE_APPLICATION_CREDENTIALS=/decrypted-credentials.json gcr.io/$PROJECT_ID/bts-ml-etl:latest'
  ]

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: [
    '-c', 
    'docker run -t --env GOOGLE_APPLICATION_CREDENTIALS=/decrypted-credentials.json gcr.io/$PROJECT_ID/bts-ml-model:latest'
  ]

images: ['gcr.io/beat-the-streak-ml/bts-ml-etl:latest', 'gcr.io/beat-the-streak-ml/bts-ml-model:latest']
timeout: 6000s


